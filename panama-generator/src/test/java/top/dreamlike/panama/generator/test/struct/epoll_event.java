// Generated by jextract

package top.dreamlike.panama.generator.test.struct;

import java.lang.foreign.GroupLayout;
import java.lang.foreign.MemoryLayout;
import java.lang.foreign.MemorySegment;
import java.lang.foreign.SegmentAllocator;
import java.lang.invoke.VarHandle;

import static java.lang.foreign.ValueLayout.*;

public class epoll_event {

    static final GroupLayout $struct$LAYOUT = MemoryLayout.structLayout(
            JAVA_INT.withByteAlignment(1).withName("events"),
            MemoryLayout.unionLayout(
                    ADDRESS.withByteAlignment(1).withName("ptr"),
                    JAVA_INT.withByteAlignment(1).withName("fd"),
                    JAVA_INT.withByteAlignment(1).withName("u32"),
                    JAVA_LONG.withByteAlignment(1).withName("u64")
            ).withName("data")
    ).withName("epoll_event");
    static final VarHandle events$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("events"));

    public static MemoryLayout $LAYOUT() {
        return epoll_event.$struct$LAYOUT;
    }

    public static VarHandle events$VH() {
        return epoll_event.events$VH;
    }

    public static int events$get(MemorySegment seg) {
        return (int) epoll_event.events$VH.get(seg);
    }

    public static void events$set(MemorySegment seg, int x) {
        epoll_event.events$VH.set(seg, x);
    }

    public static int events$get(MemorySegment seg, long index) {
        return (int) epoll_event.events$VH.get(seg.asSlice(index * sizeof()));
    }

    public static void events$set(MemorySegment seg, long index, int x) {
        epoll_event.events$VH.set(seg.asSlice(index * sizeof()), x);
    }

    public static MemorySegment data$slice(MemorySegment seg) {
        return seg.asSlice(4, 8);
    }

    public static int fd$get(MemorySegment seg, long index) {
        MemorySegment slice = seg.asSlice(index * sizeof());
        return epoll_data.fd$get(data$slice(slice));
    }

    public static long sizeof() {
        return $LAYOUT().byteSize();
    }

    public static MemorySegment allocate(SegmentAllocator allocator) {
        return allocator.allocate($LAYOUT());
    }

    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }

}



// Generated by jextract

package top.dreamlike.liburing;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$10 {

    static final FunctionDescriptor sigwaitinfo$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle sigwaitinfo$MH = RuntimeHelper.downcallHandle(
        "sigwaitinfo",
        constants$10.sigwaitinfo$FUNC
    );
    static final FunctionDescriptor sigtimedwait$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle sigtimedwait$MH = RuntimeHelper.downcallHandle(
        "sigtimedwait",
        constants$10.sigtimedwait$FUNC
    );
    static final FunctionDescriptor sigqueue$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        MemoryLayout.unionLayout(
            Constants$root.C_INT$LAYOUT.withName("sival_int"),
            Constants$root.C_POINTER$LAYOUT.withName("sival_ptr")
        ).withName("sigval")
    );
    static final MethodHandle sigqueue$MH = RuntimeHelper.downcallHandle(
        "sigqueue",
        constants$10.sigqueue$FUNC
    );
    static final  SequenceLayout _sys_siglist$LAYOUT = MemoryLayout.sequenceLayout(65, Constants$root.C_POINTER$LAYOUT);
    static final MemorySegment _sys_siglist$SEGMENT = RuntimeHelper.lookupGlobalVariable("_sys_siglist", constants$10._sys_siglist$LAYOUT);
    static final  SequenceLayout sys_siglist$LAYOUT = MemoryLayout.sequenceLayout(65, Constants$root.C_POINTER$LAYOUT);
    static final MemorySegment sys_siglist$SEGMENT = RuntimeHelper.lookupGlobalVariable("sys_siglist", constants$10.sys_siglist$LAYOUT);
    static final FunctionDescriptor sigreturn$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle sigreturn$MH = RuntimeHelper.downcallHandle(
        "sigreturn",
        constants$10.sigreturn$FUNC
    );
}



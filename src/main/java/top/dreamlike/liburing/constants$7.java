// Generated by jextract

package top.dreamlike.liburing;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$7 {

    static final FunctionDescriptor gsignal$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle gsignal$MH = RuntimeHelper.downcallHandle(
        "gsignal",
        constants$7.gsignal$FUNC
    );
    static final FunctionDescriptor psignal$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle psignal$MH = RuntimeHelper.downcallHandle(
        "psignal",
        constants$7.psignal$FUNC
    );
    static final FunctionDescriptor psiginfo$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle psiginfo$MH = RuntimeHelper.downcallHandle(
        "psiginfo",
        constants$7.psiginfo$FUNC
    );
    static final FunctionDescriptor sigblock$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle sigblock$MH = RuntimeHelper.downcallHandle(
        "sigblock",
        constants$7.sigblock$FUNC
    );
    static final FunctionDescriptor sigsetmask$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle sigsetmask$MH = RuntimeHelper.downcallHandle(
        "sigsetmask",
        constants$7.sigsetmask$FUNC
    );
    static final FunctionDescriptor siggetmask$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT);
    static final MethodHandle siggetmask$MH = RuntimeHelper.downcallHandle(
        "siggetmask",
        constants$7.siggetmask$FUNC
    );
}



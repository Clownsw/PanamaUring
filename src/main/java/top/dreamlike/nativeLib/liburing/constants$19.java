// Generated by jextract

package top.dreamlike.nativeLib.liburing;

import java.lang.invoke.MethodHandle;
import java.lang.foreign.*;

class constants$19 {

    static final FunctionDescriptor __fswab32$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle __fswab32$MH = RuntimeHelper.downcallHandle(
        "__fswab32",
        constants$19.__fswab32$FUNC
    );
    static final FunctionDescriptor __fswab64$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle __fswab64$MH = RuntimeHelper.downcallHandle(
        "__fswab64",
        constants$19.__fswab64$FUNC
    );
    static final FunctionDescriptor __fswahw32$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle __fswahw32$MH = RuntimeHelper.downcallHandle(
        "__fswahw32",
        constants$19.__fswahw32$FUNC
    );
    static final FunctionDescriptor __fswahb32$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle __fswahb32$MH = RuntimeHelper.downcallHandle(
        "__fswahb32",
        constants$19.__fswahb32$FUNC
    );
    static final FunctionDescriptor __swab$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle __swab$MH = RuntimeHelper.downcallHandle(
        "__swab",
        constants$19.__swab$FUNC
    );
    static final FunctionDescriptor __swab16p$FUNC = FunctionDescriptor.of(Constants$root.C_SHORT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle __swab16p$MH = RuntimeHelper.downcallHandle(
        "__swab16p",
        constants$19.__swab16p$FUNC
    );
}



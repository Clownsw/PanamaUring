// Generated by jextract

package top.dreamlike.nativeLib.fcntl;

import top.dreamlike.common.CType;
import top.dreamlike.helper.RuntimeHelper;

import java.lang.foreign.FunctionDescriptor;
import java.lang.invoke.MethodHandle;

class constants$0 {

    static final FunctionDescriptor fcntl3Args$FUNC = FunctionDescriptor.of(CType.C_INT$LAYOUT,
            CType.C_INT$LAYOUT, CType.C_INT$LAYOUT, CType.C_INT$LAYOUT
    );

    static final FunctionDescriptor fcntl2Args$FUNC = FunctionDescriptor.of(CType.C_INT$LAYOUT,
            CType.C_INT$LAYOUT, CType.C_INT$LAYOUT
    );

    static final MethodHandle fcntl3Args$MH = RuntimeHelper.downcallHandle(
            "fcntl",
            constants$0.fcntl3Args$FUNC
    );

    static final MethodHandle fcntl2Args$MH = RuntimeHelper.downcallHandle(
            "fcntl",
            constants$0.fcntl2Args$FUNC
    );

    static final FunctionDescriptor open$FUNC = FunctionDescriptor.of(CType.C_INT$LAYOUT,
        CType.C_POINTER$LAYOUT,
        CType.C_INT$LAYOUT
    );
    static final MethodHandle open$MH = RuntimeHelper.downcallHandle(
        "open",
        constants$0.open$FUNC
    );
    static final FunctionDescriptor openat$FUNC = FunctionDescriptor.of(CType.C_INT$LAYOUT,
        CType.C_INT$LAYOUT,
        CType.C_POINTER$LAYOUT,
        CType.C_INT$LAYOUT
    );
    static final MethodHandle openat$MH = RuntimeHelper.downcallHandle(
        "openat",
        constants$0.openat$FUNC
    );
    static final FunctionDescriptor creat$FUNC = FunctionDescriptor.of(CType.C_INT$LAYOUT,
        CType.C_POINTER$LAYOUT,
        CType.C_INT$LAYOUT
    );
    static final MethodHandle creat$MH = RuntimeHelper.downcallHandle(
        "creat",
        constants$0.creat$FUNC
    );
    static final FunctionDescriptor lockf$FUNC = FunctionDescriptor.of(CType.C_INT$LAYOUT,
        CType.C_INT$LAYOUT,
        CType.C_INT$LAYOUT,
        CType.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle lockf$MH = RuntimeHelper.downcallHandle(
        "lockf",
        constants$0.lockf$FUNC
    );
    static final FunctionDescriptor posix_fadvise$FUNC = FunctionDescriptor.of(CType.C_INT$LAYOUT,
        CType.C_INT$LAYOUT,
        CType.C_LONG_LONG$LAYOUT,
        CType.C_LONG_LONG$LAYOUT,
        CType.C_INT$LAYOUT
    );
    static final MethodHandle posix_fadvise$MH = RuntimeHelper.downcallHandle(
        "posix_fadvise",
        constants$0.posix_fadvise$FUNC
    );
}



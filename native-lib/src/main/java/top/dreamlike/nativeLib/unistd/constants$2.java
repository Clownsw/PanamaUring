// Generated by jextract

package top.dreamlike.nativeLib.unistd;

import top.dreamlike.common.CType;

import java.lang.foreign.FunctionDescriptor;
import java.lang.invoke.MethodHandle;

class constants$2 {

    static final FunctionDescriptor usleep$FUNC = FunctionDescriptor.of(CType.C_INT$LAYOUT,
        CType.C_INT$LAYOUT
    );
    static final MethodHandle usleep$MH = RuntimeHelper.downcallHandle(
        "usleep",
        constants$2.usleep$FUNC
    );
    static final FunctionDescriptor pause$FUNC = FunctionDescriptor.of(CType.C_INT$LAYOUT);
    static final MethodHandle pause$MH = RuntimeHelper.downcallHandle(
        "pause",
        constants$2.pause$FUNC
    );
    static final FunctionDescriptor chown$FUNC = FunctionDescriptor.of(CType.C_INT$LAYOUT,
        CType.C_POINTER$LAYOUT,
        CType.C_INT$LAYOUT,
        CType.C_INT$LAYOUT
    );
    static final MethodHandle chown$MH = RuntimeHelper.downcallHandle(
        "chown",
        constants$2.chown$FUNC
    );
    static final FunctionDescriptor fchown$FUNC = FunctionDescriptor.of(CType.C_INT$LAYOUT,
        CType.C_INT$LAYOUT,
        CType.C_INT$LAYOUT,
        CType.C_INT$LAYOUT
    );
    static final MethodHandle fchown$MH = RuntimeHelper.downcallHandle(
        "fchown",
        constants$2.fchown$FUNC
    );
    static final FunctionDescriptor lchown$FUNC = FunctionDescriptor.of(CType.C_INT$LAYOUT,
        CType.C_POINTER$LAYOUT,
        CType.C_INT$LAYOUT,
        CType.C_INT$LAYOUT
    );
    static final MethodHandle lchown$MH = RuntimeHelper.downcallHandle(
        "lchown",
        constants$2.lchown$FUNC
    );
    static final FunctionDescriptor fchownat$FUNC = FunctionDescriptor.of(CType.C_INT$LAYOUT,
        CType.C_INT$LAYOUT,
        CType.C_POINTER$LAYOUT,
        CType.C_INT$LAYOUT,
        CType.C_INT$LAYOUT,
        CType.C_INT$LAYOUT
    );
    static final MethodHandle fchownat$MH = RuntimeHelper.downcallHandle(
        "fchownat",
        constants$2.fchownat$FUNC
    );
}



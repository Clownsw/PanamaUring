// Generated by jextract

package top.dreamlike.nativeLib.epoll;

import top.dreamlike.common.CType;
import top.dreamlike.helper.RuntimeHelper;

import java.lang.foreign.FunctionDescriptor;
import java.lang.invoke.MethodHandle;

class constants$1 {

    static final FunctionDescriptor select$FUNC = FunctionDescriptor.of(CType.C_INT$LAYOUT,
        CType.C_INT$LAYOUT,
        CType.C_POINTER$LAYOUT,
        CType.C_POINTER$LAYOUT,
        CType.C_POINTER$LAYOUT,
        CType.C_POINTER$LAYOUT
    );
    static final MethodHandle select$MH = RuntimeHelper.downcallHandle(
        "select",
        constants$1.select$FUNC
    );
    static final FunctionDescriptor pselect$FUNC = FunctionDescriptor.of(CType.C_INT$LAYOUT,
        CType.C_INT$LAYOUT,
        CType.C_POINTER$LAYOUT,
        CType.C_POINTER$LAYOUT,
        CType.C_POINTER$LAYOUT,
        CType.C_POINTER$LAYOUT,
        CType.C_POINTER$LAYOUT
    );
    static final MethodHandle pselect$MH = RuntimeHelper.downcallHandle(
        "pselect",
        constants$1.pselect$FUNC
    );
    static final FunctionDescriptor epoll_create$FUNC = FunctionDescriptor.of(CType.C_INT$LAYOUT,
        CType.C_INT$LAYOUT
    );
    static final MethodHandle epoll_create$MH = RuntimeHelper.downcallHandle(
        "epoll_create",
        constants$1.epoll_create$FUNC
    );
    static final FunctionDescriptor epoll_create1$FUNC = FunctionDescriptor.of(CType.C_INT$LAYOUT,
        CType.C_INT$LAYOUT
    );
    static final MethodHandle epoll_create1$MH = RuntimeHelper.downcallHandle(
        "epoll_create1",
        constants$1.epoll_create1$FUNC
    );
    static final FunctionDescriptor epoll_ctl$FUNC = FunctionDescriptor.of(CType.C_INT$LAYOUT,
        CType.C_INT$LAYOUT,
        CType.C_INT$LAYOUT,
        CType.C_INT$LAYOUT,
        CType.C_POINTER$LAYOUT
    );
    static final MethodHandle epoll_ctl$MH = RuntimeHelper.downcallHandle(
        "epoll_ctl",
        constants$1.epoll_ctl$FUNC
    );
    static final FunctionDescriptor epoll_wait$FUNC = FunctionDescriptor.of(CType.C_INT$LAYOUT,
        CType.C_INT$LAYOUT,
        CType.C_POINTER$LAYOUT,
        CType.C_INT$LAYOUT,
        CType.C_INT$LAYOUT
    );
    static final MethodHandle epoll_wait$MH = RuntimeHelper.downcallHandle(
        "epoll_wait",
        constants$1.epoll_wait$FUNC
    );
}



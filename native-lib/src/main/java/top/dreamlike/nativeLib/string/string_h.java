// Generated by jextract

package top.dreamlike.nativeLib.string;

import top.dreamlike.common.CType;

import java.lang.foreign.MemorySegment;
import java.lang.invoke.MethodHandle;

import static java.lang.foreign.ValueLayout.OfAddress;
public class string_h  {

    /* package-private */ string_h() {}

    public static MethodHandle memcpy$MH() {
        return RuntimeHelper.requireNonNull(constants$0.memcpy$MH, "memcpy");
    }

    public static MemorySegment memcpy(MemorySegment __dest, MemorySegment __src, long __n) {
        var mh$ = memcpy$MH();
        try {
            return (java.lang.foreign.MemorySegment) mh$.invokeExact(__dest, __src, __n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }

    public static MethodHandle memmove$MH() {
        return RuntimeHelper.requireNonNull(constants$0.memmove$MH, "memmove");
    }

    public static MemorySegment memmove(MemorySegment __dest, MemorySegment __src, long __n) {
        var mh$ = memmove$MH();
        try {
            return (java.lang.foreign.MemorySegment) mh$.invokeExact(__dest, __src, __n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }

    public static MethodHandle memccpy$MH() {
        return RuntimeHelper.requireNonNull(constants$0.memccpy$MH, "memccpy");
    }

    public static MemorySegment memccpy(MemorySegment __dest, MemorySegment __src, int __c, long __n) {
        var mh$ = memccpy$MH();
        try {
            return (java.lang.foreign.MemorySegment) mh$.invokeExact(__dest, __src, __c, __n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }

    public static MethodHandle memset$MH() {
        return RuntimeHelper.requireNonNull(constants$0.memset$MH, "memset");
    }

    public static MemorySegment memset(MemorySegment __s, int __c, long __n) {
        var mh$ = memset$MH();
        try {
            return (java.lang.foreign.MemorySegment) mh$.invokeExact(__s, __c, __n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }

    public static MethodHandle memcmp$MH() {
        return RuntimeHelper.requireNonNull(constants$0.memcmp$MH, "memcmp");
    }

    public static int memcmp(MemorySegment __s1, MemorySegment __s2, long __n) {
        var mh$ = memcmp$MH();
        try {
            return (int) mh$.invokeExact(__s1, __s2, __n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }

    public static MethodHandle memchr$MH() {
        return RuntimeHelper.requireNonNull(constants$0.memchr$MH, "memchr");
    }

    public static MemorySegment memchr(MemorySegment __s, int __c, long __n) {
        var mh$ = memchr$MH();
        try {
            return (java.lang.foreign.MemorySegment) mh$.invokeExact(__s, __c, __n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }

    public static MethodHandle strcpy$MH() {
        return RuntimeHelper.requireNonNull(constants$1.strcpy$MH, "strcpy");
    }

    public static MemorySegment strcpy(MemorySegment __dest, MemorySegment __src) {
        var mh$ = strcpy$MH();
        try {
            return (java.lang.foreign.MemorySegment) mh$.invokeExact(__dest, __src);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }

    public static MethodHandle strncpy$MH() {
        return RuntimeHelper.requireNonNull(constants$1.strncpy$MH, "strncpy");
    }

    public static MemorySegment strncpy(MemorySegment __dest, MemorySegment __src, long __n) {
        var mh$ = strncpy$MH();
        try {
            return (java.lang.foreign.MemorySegment) mh$.invokeExact(__dest, __src, __n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }

    public static MethodHandle strcat$MH() {
        return RuntimeHelper.requireNonNull(constants$1.strcat$MH, "strcat");
    }

    public static MemorySegment strcat(MemorySegment __dest, MemorySegment __src) {
        var mh$ = strcat$MH();
        try {
            return (java.lang.foreign.MemorySegment) mh$.invokeExact(__dest, __src);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }

    public static MethodHandle strncat$MH() {
        return RuntimeHelper.requireNonNull(constants$1.strncat$MH, "strncat");
    }

    public static MemorySegment strncat(MemorySegment __dest, MemorySegment __src, long __n) {
        var mh$ = strncat$MH();
        try {
            return (java.lang.foreign.MemorySegment) mh$.invokeExact(__dest, __src, __n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }

    public static MethodHandle strcmp$MH() {
        return RuntimeHelper.requireNonNull(constants$1.strcmp$MH, "strcmp");
    }

    public static int strcmp(MemorySegment __s1, MemorySegment __s2) {
        var mh$ = strcmp$MH();
        try {
            return (int) mh$.invokeExact(__s1, __s2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }

    public static MethodHandle strncmp$MH() {
        return RuntimeHelper.requireNonNull(constants$1.strncmp$MH, "strncmp");
    }

    public static int strncmp(MemorySegment __s1, MemorySegment __s2, long __n) {
        var mh$ = strncmp$MH();
        try {
            return (int) mh$.invokeExact(__s1, __s2, __n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }

    public static MethodHandle strcoll$MH() {
        return RuntimeHelper.requireNonNull(constants$2.strcoll$MH, "strcoll");
    }

    public static int strcoll(MemorySegment __s1, MemorySegment __s2) {
        var mh$ = strcoll$MH();
        try {
            return (int) mh$.invokeExact(__s1, __s2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }

    public static MethodHandle strxfrm$MH() {
        return RuntimeHelper.requireNonNull(constants$2.strxfrm$MH, "strxfrm");
    }

    public static long strxfrm(MemorySegment __dest, MemorySegment __src, long __n) {
        var mh$ = strxfrm$MH();
        try {
            return (long) mh$.invokeExact(__dest, __src, __n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress __locale_t = CType.C_POINTER$LAYOUT;
    public static OfAddress locale_t = CType.C_POINTER$LAYOUT;

    public static MethodHandle strcoll_l$MH() {
        return RuntimeHelper.requireNonNull(constants$2.strcoll_l$MH, "strcoll_l");
    }

    public static int strcoll_l(MemorySegment __s1, MemorySegment __s2, MemorySegment __l) {
        var mh$ = strcoll_l$MH();
        try {
            return (int) mh$.invokeExact(__s1, __s2, __l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }

    public static MethodHandle strxfrm_l$MH() {
        return RuntimeHelper.requireNonNull(constants$2.strxfrm_l$MH, "strxfrm_l");
    }

    public static long strxfrm_l(MemorySegment __dest, MemorySegment __src, long __n, MemorySegment __l) {
        var mh$ = strxfrm_l$MH();
        try {
            return (long) mh$.invokeExact(__dest, __src, __n, __l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }

    public static MethodHandle strdup$MH() {
        return RuntimeHelper.requireNonNull(constants$2.strdup$MH, "strdup");
    }

    public static MemorySegment strdup(MemorySegment __s) {
        var mh$ = strdup$MH();
        try {
            return (java.lang.foreign.MemorySegment) mh$.invokeExact(__s);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }

    public static MethodHandle strndup$MH() {
        return RuntimeHelper.requireNonNull(constants$2.strndup$MH, "strndup");
    }

    public static MemorySegment strndup(MemorySegment __string, long __n) {
        var mh$ = strndup$MH();
        try {
            return (java.lang.foreign.MemorySegment) mh$.invokeExact(__string, __n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }

    public static MethodHandle strchr$MH() {
        return RuntimeHelper.requireNonNull(constants$3.strchr$MH, "strchr");
    }

    public static MemorySegment strchr(MemorySegment __s, int __c) {
        var mh$ = strchr$MH();
        try {
            return (java.lang.foreign.MemorySegment) mh$.invokeExact(__s, __c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }

    public static MethodHandle strrchr$MH() {
        return RuntimeHelper.requireNonNull(constants$3.strrchr$MH, "strrchr");
    }

    public static MemorySegment strrchr(MemorySegment __s, int __c) {
        var mh$ = strrchr$MH();
        try {
            return (java.lang.foreign.MemorySegment) mh$.invokeExact(__s, __c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }

    public static MethodHandle strcspn$MH() {
        return RuntimeHelper.requireNonNull(constants$3.strcspn$MH, "strcspn");
    }

    public static long strcspn(MemorySegment __s, MemorySegment __reject) {
        var mh$ = strcspn$MH();
        try {
            return (long) mh$.invokeExact(__s, __reject);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }

    public static MethodHandle strspn$MH() {
        return RuntimeHelper.requireNonNull(constants$3.strspn$MH, "strspn");
    }

    public static long strspn(MemorySegment __s, MemorySegment __accept) {
        var mh$ = strspn$MH();
        try {
            return (long) mh$.invokeExact(__s, __accept);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }

    public static MethodHandle strpbrk$MH() {
        return RuntimeHelper.requireNonNull(constants$3.strpbrk$MH, "strpbrk");
    }

    public static MemorySegment strpbrk(MemorySegment __s, MemorySegment __accept) {
        var mh$ = strpbrk$MH();
        try {
            return (java.lang.foreign.MemorySegment) mh$.invokeExact(__s, __accept);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }

    public static MethodHandle strstr$MH() {
        return RuntimeHelper.requireNonNull(constants$3.strstr$MH, "strstr");
    }

    public static MemorySegment strstr(MemorySegment __haystack, MemorySegment __needle) {
        var mh$ = strstr$MH();
        try {
            return (java.lang.foreign.MemorySegment) mh$.invokeExact(__haystack, __needle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }

    public static MethodHandle strtok$MH() {
        return RuntimeHelper.requireNonNull(constants$4.strtok$MH, "strtok");
    }

    public static MemorySegment strtok(MemorySegment __s, MemorySegment __delim) {
        var mh$ = strtok$MH();
        try {
            return (java.lang.foreign.MemorySegment) mh$.invokeExact(__s, __delim);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }

    public static MethodHandle __strtok_r$MH() {
        return RuntimeHelper.requireNonNull(constants$4.__strtok_r$MH, "__strtok_r");
    }

    public static MemorySegment __strtok_r(MemorySegment __s, MemorySegment __delim, MemorySegment __save_ptr) {
        var mh$ = __strtok_r$MH();
        try {
            return (java.lang.foreign.MemorySegment) mh$.invokeExact(__s, __delim, __save_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }

    public static MethodHandle strtok_r$MH() {
        return RuntimeHelper.requireNonNull(constants$4.strtok_r$MH, "strtok_r");
    }

    public static MemorySegment strtok_r(MemorySegment __s, MemorySegment __delim, MemorySegment __save_ptr) {
        var mh$ = strtok_r$MH();
        try {
            return (java.lang.foreign.MemorySegment) mh$.invokeExact(__s, __delim, __save_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }

    public static MethodHandle strlen$MH() {
        return RuntimeHelper.requireNonNull(constants$4.strlen$MH, "strlen");
    }

    public static long strlen(MemorySegment __s) {
        var mh$ = strlen$MH();
        try {
            return (long) mh$.invokeExact(__s);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }

    public static MethodHandle strnlen$MH() {
        return RuntimeHelper.requireNonNull(constants$4.strnlen$MH, "strnlen");
    }

    public static long strnlen(MemorySegment __string, long __maxlen) {
        var mh$ = strnlen$MH();
        try {
            return (long) mh$.invokeExact(__string, __maxlen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }

    public static MethodHandle strerror$MH() {
        return RuntimeHelper.requireNonNull(constants$4.strerror$MH, "strerror");
    }

    public static MemorySegment strerror(int __errnum) {
        var mh$ = strerror$MH();
        try {
            return (java.lang.foreign.MemorySegment) mh$.invokeExact(__errnum);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }

    public static MethodHandle strerror_r$MH() {
        return RuntimeHelper.requireNonNull(constants$5.strerror_r$MH, "strerror_r");
    }

    public static int strerror_r(int __errnum, MemorySegment __buf, long __buflen) {
        var mh$ = strerror_r$MH();
        try {
            return (int) mh$.invokeExact(__errnum, __buf, __buflen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }

    public static MethodHandle strerror_l$MH() {
        return RuntimeHelper.requireNonNull(constants$5.strerror_l$MH, "strerror_l");
    }

    public static MemorySegment strerror_l(int __errnum, MemorySegment __l) {
        var mh$ = strerror_l$MH();
        try {
            return (java.lang.foreign.MemorySegment) mh$.invokeExact(__errnum, __l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }

    public static MethodHandle bcmp$MH() {
        return RuntimeHelper.requireNonNull(constants$5.bcmp$MH, "bcmp");
    }

    public static int bcmp(MemorySegment __s1, MemorySegment __s2, long __n) {
        var mh$ = bcmp$MH();
        try {
            return (int) mh$.invokeExact(__s1, __s2, __n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }

    public static MethodHandle bcopy$MH() {
        return RuntimeHelper.requireNonNull(constants$5.bcopy$MH, "bcopy");
    }

    public static void bcopy(MemorySegment __src, MemorySegment __dest, long __n) {
        var mh$ = bcopy$MH();
        try {
            mh$.invokeExact(__src, __dest, __n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }

    public static MethodHandle bzero$MH() {
        return RuntimeHelper.requireNonNull(constants$5.bzero$MH, "bzero");
    }

    public static void bzero(MemorySegment __s, long __n) {
        var mh$ = bzero$MH();
        try {
            mh$.invokeExact(__s, __n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }

    public static MethodHandle index$MH() {
        return RuntimeHelper.requireNonNull(constants$5.index$MH, "index");
    }

    public static MemorySegment index(MemorySegment __s, int __c) {
        var mh$ = index$MH();
        try {
            return (java.lang.foreign.MemorySegment) mh$.invokeExact(__s, __c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }

    public static MethodHandle rindex$MH() {
        return RuntimeHelper.requireNonNull(constants$6.rindex$MH, "rindex");
    }

    public static MemorySegment rindex(MemorySegment __s, int __c) {
        var mh$ = rindex$MH();
        try {
            return (java.lang.foreign.MemorySegment) mh$.invokeExact(__s, __c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }

    public static MethodHandle ffs$MH() {
        return RuntimeHelper.requireNonNull(constants$6.ffs$MH, "ffs");
    }
    public static int ffs ( int __i) {
        var mh$ = ffs$MH();
        try {
            return (int)mh$.invokeExact(__i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ffsl$MH() {
        return RuntimeHelper.requireNonNull(constants$6.ffsl$MH,"ffsl");
    }
    public static int ffsl ( long __l) {
        var mh$ = ffsl$MH();
        try {
            return (int)mh$.invokeExact(__l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ffsll$MH() {
        return RuntimeHelper.requireNonNull(constants$6.ffsll$MH,"ffsll");
    }
    public static int ffsll ( long __ll) {
        var mh$ = ffsll$MH();
        try {
            return (int)mh$.invokeExact(__ll);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }

    public static MethodHandle strcasecmp$MH() {
        return RuntimeHelper.requireNonNull(constants$6.strcasecmp$MH, "strcasecmp");
    }

    public static int strcasecmp(MemorySegment __s1, MemorySegment __s2) {
        var mh$ = strcasecmp$MH();
        try {
            return (int) mh$.invokeExact(__s1, __s2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }

    public static MethodHandle strncasecmp$MH() {
        return RuntimeHelper.requireNonNull(constants$6.strncasecmp$MH, "strncasecmp");
    }

    public static int strncasecmp(MemorySegment __s1, MemorySegment __s2, long __n) {
        var mh$ = strncasecmp$MH();
        try {
            return (int) mh$.invokeExact(__s1, __s2, __n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }

    public static MethodHandle strcasecmp_l$MH() {
        return RuntimeHelper.requireNonNull(constants$7.strcasecmp_l$MH, "strcasecmp_l");
    }

    public static int strcasecmp_l(MemorySegment __s1, MemorySegment __s2, MemorySegment __loc) {
        var mh$ = strcasecmp_l$MH();
        try {
            return (int) mh$.invokeExact(__s1, __s2, __loc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }

    public static MethodHandle strncasecmp_l$MH() {
        return RuntimeHelper.requireNonNull(constants$7.strncasecmp_l$MH, "strncasecmp_l");
    }

    public static int strncasecmp_l(MemorySegment __s1, MemorySegment __s2, long __n, MemorySegment __loc) {
        var mh$ = strncasecmp_l$MH();
        try {
            return (int) mh$.invokeExact(__s1, __s2, __n, __loc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }

    public static MethodHandle explicit_bzero$MH() {
        return RuntimeHelper.requireNonNull(constants$7.explicit_bzero$MH, "explicit_bzero");
    }

    public static void explicit_bzero(MemorySegment __s, long __n) {
        var mh$ = explicit_bzero$MH();
        try {
            mh$.invokeExact(__s, __n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }

    public static MethodHandle strsep$MH() {
        return RuntimeHelper.requireNonNull(constants$7.strsep$MH, "strsep");
    }

    public static MemorySegment strsep(MemorySegment __stringp, MemorySegment __delim) {
        var mh$ = strsep$MH();
        try {
            return (java.lang.foreign.MemorySegment) mh$.invokeExact(__stringp, __delim);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }

    public static MethodHandle strsignal$MH() {
        return RuntimeHelper.requireNonNull(constants$7.strsignal$MH, "strsignal");
    }

    public static MemorySegment strsignal(int __sig) {
        var mh$ = strsignal$MH();
        try {
            return (java.lang.foreign.MemorySegment) mh$.invokeExact(__sig);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }

    public static MethodHandle __stpcpy$MH() {
        return RuntimeHelper.requireNonNull(constants$7.__stpcpy$MH, "__stpcpy");
    }

    public static MemorySegment __stpcpy(MemorySegment __dest, MemorySegment __src) {
        var mh$ = __stpcpy$MH();
        try {
            return (java.lang.foreign.MemorySegment) mh$.invokeExact(__dest, __src);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }

    public static MethodHandle stpcpy$MH() {
        return RuntimeHelper.requireNonNull(constants$8.stpcpy$MH, "stpcpy");
    }

    public static MemorySegment stpcpy(MemorySegment __dest, MemorySegment __src) {
        var mh$ = stpcpy$MH();
        try {
            return (java.lang.foreign.MemorySegment) mh$.invokeExact(__dest, __src);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }

    public static MethodHandle __stpncpy$MH() {
        return RuntimeHelper.requireNonNull(constants$8.__stpncpy$MH, "__stpncpy");
    }

    public static MemorySegment __stpncpy(MemorySegment __dest, MemorySegment __src, long __n) {
        var mh$ = __stpncpy$MH();
        try {
            return (java.lang.foreign.MemorySegment) mh$.invokeExact(__dest, __src, __n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }

    public static MethodHandle stpncpy$MH() {
        return RuntimeHelper.requireNonNull(constants$8.stpncpy$MH, "stpncpy");
    }

    public static MemorySegment stpncpy(MemorySegment __dest, MemorySegment __src, long __n) {
        var mh$ = stpncpy$MH();
        try {
            return (java.lang.foreign.MemorySegment) mh$.invokeExact(__dest, __src, __n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }


}



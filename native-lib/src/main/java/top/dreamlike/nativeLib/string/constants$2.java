// Generated by jextract

package top.dreamlike.nativeLib.string;

import top.dreamlike.common.CType;
import top.dreamlike.helper.RuntimeHelper;

import java.lang.foreign.FunctionDescriptor;
import java.lang.invoke.MethodHandle;
class constants$2 {

    static final FunctionDescriptor strcoll$FUNC = FunctionDescriptor.of(CType.C_INT$LAYOUT,
        CType.C_POINTER$LAYOUT,
        CType.C_POINTER$LAYOUT
    );
    static final MethodHandle strcoll$MH = RuntimeHelper.downcallHandle(
        "strcoll",
        constants$2.strcoll$FUNC
    );
    static final FunctionDescriptor strxfrm$FUNC = FunctionDescriptor.of(CType.C_LONG_LONG$LAYOUT,
        CType.C_POINTER$LAYOUT,
        CType.C_POINTER$LAYOUT,
        CType.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle strxfrm$MH = RuntimeHelper.downcallHandle(
        "strxfrm",
        constants$2.strxfrm$FUNC
    );
    static final FunctionDescriptor strcoll_l$FUNC = FunctionDescriptor.of(CType.C_INT$LAYOUT,
        CType.C_POINTER$LAYOUT,
        CType.C_POINTER$LAYOUT,
        CType.C_POINTER$LAYOUT
    );
    static final MethodHandle strcoll_l$MH = RuntimeHelper.downcallHandle(
        "strcoll_l",
        constants$2.strcoll_l$FUNC
    );
    static final FunctionDescriptor strxfrm_l$FUNC = FunctionDescriptor.of(CType.C_LONG_LONG$LAYOUT,
        CType.C_POINTER$LAYOUT,
        CType.C_POINTER$LAYOUT,
        CType.C_LONG_LONG$LAYOUT,
        CType.C_POINTER$LAYOUT
    );
    static final MethodHandle strxfrm_l$MH = RuntimeHelper.downcallHandle(
        "strxfrm_l",
        constants$2.strxfrm_l$FUNC
    );
    static final FunctionDescriptor strdup$FUNC = FunctionDescriptor.of(CType.C_POINTER$LAYOUT,
        CType.C_POINTER$LAYOUT
    );
    static final MethodHandle strdup$MH = RuntimeHelper.downcallHandle(
        "strdup",
        constants$2.strdup$FUNC
    );
    static final FunctionDescriptor strndup$FUNC = FunctionDescriptor.of(CType.C_POINTER$LAYOUT,
        CType.C_POINTER$LAYOUT,
        CType.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle strndup$MH = RuntimeHelper.downcallHandle(
        "strndup",
        constants$2.strndup$FUNC
    );
}



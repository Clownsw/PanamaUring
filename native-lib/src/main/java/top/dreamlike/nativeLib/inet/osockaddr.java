// Generated by jextract

package top.dreamlike.nativeLib.inet;

import top.dreamlike.common.CType;

import java.lang.foreign.*;
import java.lang.invoke.VarHandle;

public class osockaddr {

    static final GroupLayout $struct$LAYOUT = MemoryLayout.structLayout(
            CType.C_SHORT$LAYOUT.withName("sa_family"),
            MemoryLayout.sequenceLayout(14, CType.C_CHAR$LAYOUT).withName("sa_data")
    ).withName("osockaddr");

    public static MemoryLayout $LAYOUT() {
        return osockaddr.$struct$LAYOUT;
    }

    static final VarHandle sa_family$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("sa_family"));

    public static VarHandle sa_family$VH() {
        return osockaddr.sa_family$VH;
    }

    public static short sa_family$get(MemorySegment seg) {
        return (short)osockaddr.sa_family$VH.get(seg);
    }
    public static void sa_family$set( MemorySegment seg, short x) {
        osockaddr.sa_family$VH.set(seg, x);
    }
    public static short sa_family$get(MemorySegment seg, long index) {
        return (short)osockaddr.sa_family$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void sa_family$set(MemorySegment seg, long index, short x) {
        osockaddr.sa_family$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment sa_data$slice(MemorySegment seg) {
        return seg.asSlice(2, 14);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }

}


